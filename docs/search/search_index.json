{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Classes documentation! \u00b6 Github Code \u00b6 FiveM post \u00b6 Release notes \u00b6 v0.2.0 BIG CHANGES? Added new method to import classes Don't need anymore to import as @classes/... on fxmanifest.lua file IMPORTANT Check the tutorial ! v0.1.6 Added version check Added new method to Ped client-side v0.1.4 Added new methods to Ped Added new methods to Player Added new function to Utils Fixed bug with Onesync and StateBag class not sure Fixed bug with ShowNotification Updated timeout functions to 20 seconds Fixed Marker class, marker appears on center now Fixed Coords:AddBlip Removed unused prints v0.1.3 Added method AddBlip to Coords class Added methods GetPosition and SwapModel to class Prop Added function TimeoutRequestModel to utils Added common methods (string and table) Removed error when trying to create a Ped class with non existent entity (now is only a warning) Updated state for Player class Updated StateBag for players v0.1.2 Added new class Prop Added inside class methods .state It's used like class StateBag (ex: .state:set(key, value, shared)) v0.1.1 Added StateBag class Fix [client/ped.lua] missing returning the Vehicle class v0.1.0 BIG CHANGES Find a new method of creating classes, old method had bugs about being replaced it-self.","title":"Index"},{"location":"#welcome-to-classes-documentation","text":"","title":"Welcome to Classes documentation!"},{"location":"#github-code","text":"","title":"Github Code"},{"location":"#fivem-post","text":"","title":"FiveM post"},{"location":"#release-notes","text":"v0.2.0 BIG CHANGES? Added new method to import classes Don't need anymore to import as @classes/... on fxmanifest.lua file IMPORTANT Check the tutorial ! v0.1.6 Added version check Added new method to Ped client-side v0.1.4 Added new methods to Ped Added new methods to Player Added new function to Utils Fixed bug with Onesync and StateBag class not sure Fixed bug with ShowNotification Updated timeout functions to 20 seconds Fixed Marker class, marker appears on center now Fixed Coords:AddBlip Removed unused prints v0.1.3 Added method AddBlip to Coords class Added methods GetPosition and SwapModel to class Prop Added function TimeoutRequestModel to utils Added common methods (string and table) Removed error when trying to create a Ped class with non existent entity (now is only a warning) Updated state for Player class Updated StateBag for players v0.1.2 Added new class Prop Added inside class methods .state It's used like class StateBag (ex: .state:set(key, value, shared)) v0.1.1 Added StateBag class Fix [client/ped.lua] missing returning the Vehicle class v0.1.0 BIG CHANGES Find a new method of creating classes, old method had bugs about being replaced it-self.","title":"Release notes"},{"location":"credits/","text":"Credits \u00b6 Developer \u00b6 PiterMcFlebor (\u01a4\u0196\u01ac\u0404\u01a6 M\u0187\u0191\u053c\u0404\u0181\u01a0\u01a6#9270) Contributors \u00b6 none :(","title":"Credits"},{"location":"credits/#credits","text":"","title":"Credits"},{"location":"credits/#developer","text":"PiterMcFlebor (\u01a4\u0196\u01ac\u0404\u01a6 M\u0187\u0191\u053c\u0404\u0181\u01a0\u01a6#9270)","title":"Developer"},{"location":"credits/#contributors","text":"none :(","title":"Contributors"},{"location":"read/","text":"How to read the docs \u00b6 This sounds very stupid, but lets explain how to read the docs. At the left-side of this page you have a navigation bar where you can see all existent classes. Inside every class you have 3 types Common , Client and Server . For example: StateBag has inside Common and inside of it you have the methods inside StateBag . This means every method inside Common is the same on client-side and server-side . Every method inside Common will be run using : (ex: state:set() ), but this is explain at the bottom of every method inside the Examples .","title":"How to read the docs"},{"location":"read/#how-to-read-the-docs","text":"This sounds very stupid, but lets explain how to read the docs. At the left-side of this page you have a navigation bar where you can see all existent classes. Inside every class you have 3 types Common , Client and Server . For example: StateBag has inside Common and inside of it you have the methods inside StateBag . This means every method inside Common is the same on client-side and server-side . Every method inside Common will be run using : (ex: state:set() ), but this is explain at the bottom of every method inside the Examples .","title":"How to read the docs"},{"location":"tutorial/","text":"Creating your first script with classes ! \u00b6 Create your resource folder \u00b6 In this case, my resource will be named tutorial Your directory will look like this: tutorial | fxmanifest.lua | +---client | main.lua | \\---server main.lua Let's import the classes to our resource! \u00b6 Inside your fxmanifest.lua fx_version 'cerulean' games { 'gta5' } client_scripts { -- DEPRECATED AFTER 0.2.0 --[[ '@classes/common/utils.lua', '@classes/client/utils.lua', '@classes/client/statebag.lua', '@classes/client/coords.lua', '@classes/client/vehicle.lua', '@classes/client/player.lua', '@classes/client/ped.lua', '@classes/client/marker.lua', ]] '@classes/import.lua' , 'client/main.lua' } server_scripts { -- DEPRECATED AFTER 0.2.0 --[[ '@classes/common/utils.lua', '@classes/server/utils.lua', '@classes/server/statebag.lua', '@classes/server/coords.lua', '@classes/server/vehicle.lua', '@classes/server/player.lua', '@classes/server/ped.lua', ]] '@classes/import.lua' , 'server/main.lua' } dependency 'classes' -- if we want to use ESX --[[ dependencies { 'classes', 'es_extended' } ]] Inside your client-server side .lua file import '*' -- this get all classes import 'ped' -- this get ped class import { 'ped' , 'player' } -- this get ped and player classes -- now you can use the imported classes as before 0.2.0! local ped = Ped ( --[[ params ]] ) Adding this to snippets for VSCode \u00b6 Adding a snippet on VSCode to write our fxmanifest.lua file will be very useful. Go to File > Preferences > User Snippets Create a New Global Snippets file... Remove all from the snippet file Copy and paste this inside the snippet file: Snippet { \"fxmanifest\" :{ \"scope\" : \"lua\" , \"prefix\" : \"fxmanifest\" , \"body\" : [ \"fx_version 'cerulean'\" , \"games { 'gta5' }\" , \"\" , \"client_scripts {\" , \"\\t'@classes/import.lua',\" , \"\\t'client/*.lua',\" , \"}\" , \"\" , \"server_scripts {\" , \"\\t'@classes/import.lua',\" , \"\\t'server/*.lua',\" , \"}\" , \"\" , \"dependency 'classes'\" ] }, } Once this is done, we just need to write fxmanifest and press enter.","title":"How to start"},{"location":"tutorial/#creating-your-first-script-with-classes","text":"","title":"Creating your first script with classes!"},{"location":"tutorial/#create-your-resource-folder","text":"In this case, my resource will be named tutorial Your directory will look like this: tutorial | fxmanifest.lua | +---client | main.lua | \\---server main.lua","title":"Create your resource folder"},{"location":"tutorial/#lets-import-the-classes-to-our-resource","text":"Inside your fxmanifest.lua fx_version 'cerulean' games { 'gta5' } client_scripts { -- DEPRECATED AFTER 0.2.0 --[[ '@classes/common/utils.lua', '@classes/client/utils.lua', '@classes/client/statebag.lua', '@classes/client/coords.lua', '@classes/client/vehicle.lua', '@classes/client/player.lua', '@classes/client/ped.lua', '@classes/client/marker.lua', ]] '@classes/import.lua' , 'client/main.lua' } server_scripts { -- DEPRECATED AFTER 0.2.0 --[[ '@classes/common/utils.lua', '@classes/server/utils.lua', '@classes/server/statebag.lua', '@classes/server/coords.lua', '@classes/server/vehicle.lua', '@classes/server/player.lua', '@classes/server/ped.lua', ]] '@classes/import.lua' , 'server/main.lua' } dependency 'classes' -- if we want to use ESX --[[ dependencies { 'classes', 'es_extended' } ]] Inside your client-server side .lua file import '*' -- this get all classes import 'ped' -- this get ped class import { 'ped' , 'player' } -- this get ped and player classes -- now you can use the imported classes as before 0.2.0! local ped = Ped ( --[[ params ]] )","title":"Let's import the classes to our resource!"},{"location":"tutorial/#adding-this-to-snippets-for-vscode","text":"Adding a snippet on VSCode to write our fxmanifest.lua file will be very useful. Go to File > Preferences > User Snippets Create a New Global Snippets file... Remove all from the snippet file Copy and paste this inside the snippet file: Snippet { \"fxmanifest\" :{ \"scope\" : \"lua\" , \"prefix\" : \"fxmanifest\" , \"body\" : [ \"fx_version 'cerulean'\" , \"games { 'gta5' }\" , \"\" , \"client_scripts {\" , \"\\t'@classes/import.lua',\" , \"\\t'client/*.lua',\" , \"}\" , \"\" , \"server_scripts {\" , \"\\t'@classes/import.lua',\" , \"\\t'server/*.lua',\" , \"}\" , \"\" , \"dependency 'classes'\" ] }, } Once this is done, we just need to write fxmanifest and press enter.","title":"Adding this to snippets for VSCode"},{"location":"coords/client/addblip/","text":"AddBlip \u00b6 Parameters \u00b6 blip sprite number as short range boolean optional blip name string optional scale number optional color number optional alpha number optional Returns \u00b6 the blip id number Raise \u00b6 error the sprite id wasn't a number Examples \u00b6 local coords = Coords ( GetEntityCoords ( PlayerPedId ())) coords : AddBlip ( 1 , true , 'awesome blip' , 0.6 , 1 , 255 )","title":"AddBlip"},{"location":"coords/client/addblip/#addblip","text":"","title":"AddBlip"},{"location":"coords/client/addblip/#parameters","text":"blip sprite number as short range boolean optional blip name string optional scale number optional color number optional alpha number optional","title":"Parameters"},{"location":"coords/client/addblip/#returns","text":"the blip id number","title":"Returns"},{"location":"coords/client/addblip/#raise","text":"error the sprite id wasn't a number","title":"Raise"},{"location":"coords/client/addblip/#examples","text":"local coords = Coords ( GetEntityCoords ( PlayerPedId ())) coords : AddBlip ( 1 , true , 'awesome blip' , 0.6 , 1 , 255 )","title":"Examples"},{"location":"coords/common/init/","text":"Coords \u00b6 Parameters \u00b6 x number y number z number w number Or any vector vector2 / vector3 / vector4 Returns \u00b6 object Coords Raise \u00b6 error None of the parameters are number or vector Examples \u00b6 local spawnPoint = Coords ( 34.9 , 456.1 , 15.3 , 100.0 ) local spawnPoint = Coords ( GetEntityCoords ( PlayerPedId ()))","title":"Init"},{"location":"coords/common/init/#coords","text":"","title":"Coords"},{"location":"coords/common/init/#parameters","text":"x number y number z number w number Or any vector vector2 / vector3 / vector4","title":"Parameters"},{"location":"coords/common/init/#returns","text":"object Coords","title":"Returns"},{"location":"coords/common/init/#raise","text":"error None of the parameters are number or vector","title":"Raise"},{"location":"coords/common/init/#examples","text":"local spawnPoint = Coords ( 34.9 , 456.1 , 15.3 , 100.0 ) local spawnPoint = Coords ( GetEntityCoords ( PlayerPedId ()))","title":"Examples"},{"location":"coords/common/updatew/","text":"UpdateW \u00b6 Parameters \u00b6 heading number Returns \u00b6 None Raise \u00b6 warning not passed a number Examples \u00b6 local coords = Coords ( GetEntityCoords ( PlayerPedId ())) coords : UpdateW ( 50.0 ) -- doesn't affect to the player coords","title":"UpdateW"},{"location":"coords/common/updatew/#updatew","text":"","title":"UpdateW"},{"location":"coords/common/updatew/#parameters","text":"heading number","title":"Parameters"},{"location":"coords/common/updatew/#returns","text":"None","title":"Returns"},{"location":"coords/common/updatew/#raise","text":"warning not passed a number","title":"Raise"},{"location":"coords/common/updatew/#examples","text":"local coords = Coords ( GetEntityCoords ( PlayerPedId ())) coords : UpdateW ( 50.0 ) -- doesn't affect to the player coords","title":"Examples"},{"location":"coords/common/updatex/","text":"UpdateX \u00b6 Parameters \u00b6 x number Returns \u00b6 None Raise \u00b6 warning not passed a number Examples \u00b6 local coords = Coords ( GetEntityCoords ( PlayerPedId ())) coords : UpdateX ( 50.0 ) -- doesn't affect to the player coords","title":"UpdateX"},{"location":"coords/common/updatex/#updatex","text":"","title":"UpdateX"},{"location":"coords/common/updatex/#parameters","text":"x number","title":"Parameters"},{"location":"coords/common/updatex/#returns","text":"None","title":"Returns"},{"location":"coords/common/updatex/#raise","text":"warning not passed a number","title":"Raise"},{"location":"coords/common/updatex/#examples","text":"local coords = Coords ( GetEntityCoords ( PlayerPedId ())) coords : UpdateX ( 50.0 ) -- doesn't affect to the player coords","title":"Examples"},{"location":"coords/common/updatey/","text":"UpdateY \u00b6 Parameters \u00b6 y number Returns \u00b6 None Raise \u00b6 warning not passed a number Examples \u00b6 local coords = Coords ( GetEntityCoords ( PlayerPedId ())) coords : UpdateY ( 50.0 ) -- doesn't affect to the player coords","title":"UpdateY"},{"location":"coords/common/updatey/#updatey","text":"","title":"UpdateY"},{"location":"coords/common/updatey/#parameters","text":"y number","title":"Parameters"},{"location":"coords/common/updatey/#returns","text":"None","title":"Returns"},{"location":"coords/common/updatey/#raise","text":"warning not passed a number","title":"Raise"},{"location":"coords/common/updatey/#examples","text":"local coords = Coords ( GetEntityCoords ( PlayerPedId ())) coords : UpdateY ( 50.0 ) -- doesn't affect to the player coords","title":"Examples"},{"location":"coords/common/updatez/","text":"UpdateZ \u00b6 Parameters \u00b6 z number Returns \u00b6 None Raise \u00b6 warning not passed a number Examples \u00b6 local coords = Coords ( GetEntityCoords ( PlayerPedId ())) coords : UpdateZ ( 50.0 ) -- doesn't affect to the player coords","title":"UpdateZ"},{"location":"coords/common/updatez/#updatez","text":"","title":"UpdateZ"},{"location":"coords/common/updatez/#parameters","text":"z number","title":"Parameters"},{"location":"coords/common/updatez/#returns","text":"None","title":"Returns"},{"location":"coords/common/updatez/#raise","text":"warning not passed a number","title":"Raise"},{"location":"coords/common/updatez/#examples","text":"local coords = Coords ( GetEntityCoords ( PlayerPedId ())) coords : UpdateZ ( 50.0 ) -- doesn't affect to the player coords","title":"Examples"},{"location":"ped/common/init/","text":"Ped \u00b6 IMPORTANT Creating Peds client-side is a very bad idea. They will despawn anytime! Parameters \u00b6 new ped boolean entity id number / model number or string pedType number if new ped is true x number if new ped is true y number if new ped is true z number if new ped is true heading number if new ped is true isNetwork boolean if new ped is true Returns \u00b6 object Ped Raise \u00b6 error any parameter isn't the correct type error the ped type isn't between 0 and 29 error if the entity doesn't exists Examples \u00b6 local ped = Ped ( true , 'some_ped_model' , 34.5 , 33.2 , 45.6 , 10.0 , true ) local ped = Ped ( false , someEntityId )","title":"Init"},{"location":"ped/common/init/#ped","text":"IMPORTANT Creating Peds client-side is a very bad idea. They will despawn anytime!","title":"Ped"},{"location":"ped/common/init/#parameters","text":"new ped boolean entity id number / model number or string pedType number if new ped is true x number if new ped is true y number if new ped is true z number if new ped is true heading number if new ped is true isNetwork boolean if new ped is true","title":"Parameters"},{"location":"ped/common/init/#returns","text":"object Ped","title":"Returns"},{"location":"ped/common/init/#raise","text":"error any parameter isn't the correct type error the ped type isn't between 0 and 29 error if the entity doesn't exists","title":"Raise"},{"location":"ped/common/init/#examples","text":"local ped = Ped ( true , 'some_ped_model' , 34.5 , 33.2 , 45.6 , 10.0 , true ) local ped = Ped ( false , someEntityId )","title":"Examples"},{"location":"player/common/init/","text":"Player \u00b6 Parameters \u00b6 the server id number -1 for self player Returns \u00b6 object Player Raise \u00b6 error server id wasn't a number error player doesn't exists Examples \u00b6 -- FiveM uses Player, so classes use CPlayer local player = CPlayer ( - 1 )","title":"Init"},{"location":"player/common/init/#player","text":"","title":"Player"},{"location":"player/common/init/#parameters","text":"the server id number -1 for self player","title":"Parameters"},{"location":"player/common/init/#returns","text":"object Player","title":"Returns"},{"location":"player/common/init/#raise","text":"error server id wasn't a number error player doesn't exists","title":"Raise"},{"location":"player/common/init/#examples","text":"-- FiveM uses Player, so classes use CPlayer local player = CPlayer ( - 1 )","title":"Examples"},{"location":"statebag/common/clear/","text":"StateBag:clear() \u00b6 Parameters \u00b6 the state key any shared boolean this means will be shared with everyone Returns \u00b6 None Raise \u00b6 error shared was nil or not a boolean Examples \u00b6 -- premade ped ped . state : clear ( 'name' , true )","title":"clear"},{"location":"statebag/common/clear/#statebagclear","text":"","title":"StateBag:clear()"},{"location":"statebag/common/clear/#parameters","text":"the state key any shared boolean this means will be shared with everyone","title":"Parameters"},{"location":"statebag/common/clear/#returns","text":"None","title":"Returns"},{"location":"statebag/common/clear/#raise","text":"error shared was nil or not a boolean","title":"Raise"},{"location":"statebag/common/clear/#examples","text":"-- premade ped ped . state : clear ( 'name' , true )","title":"Examples"},{"location":"statebag/common/clearall/","text":"StateBag:clearAll() \u00b6 Parameters \u00b6 shared boolean this means will be shared with everyone Returns \u00b6 None Raise \u00b6 error shared was nil or not a boolean Examples \u00b6 -- premade ped ped . state : clearAll ( true )","title":"clearAll"},{"location":"statebag/common/clearall/#statebagclearall","text":"","title":"StateBag:clearAll()"},{"location":"statebag/common/clearall/#parameters","text":"shared boolean this means will be shared with everyone","title":"Parameters"},{"location":"statebag/common/clearall/#returns","text":"None","title":"Returns"},{"location":"statebag/common/clearall/#raise","text":"error shared was nil or not a boolean","title":"Raise"},{"location":"statebag/common/clearall/#examples","text":"-- premade ped ped . state : clearAll ( true )","title":"Examples"},{"location":"statebag/common/get/","text":"StateBag:get() \u00b6 Parameters \u00b6 state key any Returns \u00b6 the value of the state any Raise \u00b6 error key was nil Examples \u00b6 -- premade ped local name = ped . state : get ( 'name' )","title":"get"},{"location":"statebag/common/get/#statebagget","text":"","title":"StateBag:get()"},{"location":"statebag/common/get/#parameters","text":"state key any","title":"Parameters"},{"location":"statebag/common/get/#returns","text":"the value of the state any","title":"Returns"},{"location":"statebag/common/get/#raise","text":"error key was nil","title":"Raise"},{"location":"statebag/common/get/#examples","text":"-- premade ped local name = ped . state : get ( 'name' )","title":"Examples"},{"location":"statebag/common/init/","text":"StateBag \u00b6 Parameters \u00b6 the local entity id number is a player boolean optional, default false Returns \u00b6 object StateBag Raise \u00b6 warning the entity passed doesn't exists Examples \u00b6 local statebag = StateBag ( someEntityId ) -- this is used internally inside every entity class -- you don't really need to use","title":"Init"},{"location":"statebag/common/init/#statebag","text":"","title":"StateBag"},{"location":"statebag/common/init/#parameters","text":"the local entity id number is a player boolean optional, default false","title":"Parameters"},{"location":"statebag/common/init/#returns","text":"object StateBag","title":"Returns"},{"location":"statebag/common/init/#raise","text":"warning the entity passed doesn't exists","title":"Raise"},{"location":"statebag/common/init/#examples","text":"local statebag = StateBag ( someEntityId ) -- this is used internally inside every entity class -- you don't really need to use","title":"Examples"},{"location":"statebag/common/set/","text":"StateBag:set() \u00b6 Parameters \u00b6 state key any state value any shared boolean this means will be shared with everyone Returns \u00b6 boolean Raise \u00b6 error key was nil error value was nil error shared was nil or not a boolean Examples \u00b6 -- premade ped ped . state : set ( 'name' , 'Foo Bar' , true )","title":"set"},{"location":"statebag/common/set/#statebagset","text":"","title":"StateBag:set()"},{"location":"statebag/common/set/#parameters","text":"state key any state value any shared boolean this means will be shared with everyone","title":"Parameters"},{"location":"statebag/common/set/#returns","text":"boolean","title":"Returns"},{"location":"statebag/common/set/#raise","text":"error key was nil error value was nil error shared was nil or not a boolean","title":"Raise"},{"location":"statebag/common/set/#examples","text":"-- premade ped ped . state : set ( 'name' , 'Foo Bar' , true )","title":"Examples"},{"location":"utils/client/registerclientcallback/","text":"RegisterClientCallback \u00b6 Parameters \u00b6 eventName string callback function Returns \u00b6 Inside callback Values passed from server-side any Raise \u00b6 warning eventName wasn't string warning callback wasn't function Examples \u00b6 RegisterClientCallback ( 'awesome:script' , function ( foo , bar ) -- my awesome code return x , y end )","title":"RegisterClientCallback"},{"location":"utils/client/registerclientcallback/#registerclientcallback","text":"","title":"RegisterClientCallback"},{"location":"utils/client/registerclientcallback/#parameters","text":"eventName string callback function","title":"Parameters"},{"location":"utils/client/registerclientcallback/#returns","text":"Inside callback Values passed from server-side any","title":"Returns"},{"location":"utils/client/registerclientcallback/#raise","text":"warning eventName wasn't string warning callback wasn't function","title":"Raise"},{"location":"utils/client/registerclientcallback/#examples","text":"RegisterClientCallback ( 'awesome:script' , function ( foo , bar ) -- my awesome code return x , y end )","title":"Examples"},{"location":"utils/client/showhelpnotification/","text":"ShowHelpNotification \u00b6 Parameters \u00b6 message string thisFrame boolean optional, default false beep boolean optional, default true duration number optional, default -1 Returns \u00b6 None Raise \u00b6 None Examples \u00b6 while true do Wait ( 0 ) ESX . ShowHelpNotification ( 'Press ~INPUT_CONTEXT~ to ~y~do something~s~!' ) end","title":"ShowHelpNotification"},{"location":"utils/client/showhelpnotification/#showhelpnotification","text":"","title":"ShowHelpNotification"},{"location":"utils/client/showhelpnotification/#parameters","text":"message string thisFrame boolean optional, default false beep boolean optional, default true duration number optional, default -1","title":"Parameters"},{"location":"utils/client/showhelpnotification/#returns","text":"None","title":"Returns"},{"location":"utils/client/showhelpnotification/#raise","text":"None","title":"Raise"},{"location":"utils/client/showhelpnotification/#examples","text":"while true do Wait ( 0 ) ESX . ShowHelpNotification ( 'Press ~INPUT_CONTEXT~ to ~y~do something~s~!' ) end","title":"Examples"},{"location":"utils/client/shownotification/","text":"ShowNotification \u00b6 Parameters \u00b6 message string flash boolean saveToBrief boolean hudColorIndex number Returns \u00b6 None Raise \u00b6 None Examples \u00b6 ShowNotification ( 'My awesome ~r~red~s~ notification' )","title":"ShowNotification"},{"location":"utils/client/shownotification/#shownotification","text":"","title":"ShowNotification"},{"location":"utils/client/shownotification/#parameters","text":"message string flash boolean saveToBrief boolean hudColorIndex number","title":"Parameters"},{"location":"utils/client/shownotification/#returns","text":"None","title":"Returns"},{"location":"utils/client/shownotification/#raise","text":"None","title":"Raise"},{"location":"utils/client/shownotification/#examples","text":"ShowNotification ( 'My awesome ~r~red~s~ notification' )","title":"Examples"},{"location":"utils/client/timeoutrequestanim/","text":"TimeoutRequestAnim \u00b6 Parameters \u00b6 anim dictionary string Returns \u00b6 anim loaded boolean Raise \u00b6 warning After 20 seconds, request timed out. This breaks the loop waiting for the anim. Examples \u00b6 if TimeoutRequestAnim ( 'some@dictionary@anim' ) then -- do something while playing anim end","title":"TimeoutRequestAnim"},{"location":"utils/client/timeoutrequestanim/#timeoutrequestanim","text":"","title":"TimeoutRequestAnim"},{"location":"utils/client/timeoutrequestanim/#parameters","text":"anim dictionary string","title":"Parameters"},{"location":"utils/client/timeoutrequestanim/#returns","text":"anim loaded boolean","title":"Returns"},{"location":"utils/client/timeoutrequestanim/#raise","text":"warning After 20 seconds, request timed out. This breaks the loop waiting for the anim.","title":"Raise"},{"location":"utils/client/timeoutrequestanim/#examples","text":"if TimeoutRequestAnim ( 'some@dictionary@anim' ) then -- do something while playing anim end","title":"Examples"},{"location":"utils/client/timeoutrequestmodel/","text":"TimeoutRequestModel \u00b6 Parameters \u00b6 model string / number Returns \u00b6 model loaded boolean Raise \u00b6 warning After 20 seconds, request timed out. This breaks the loop waiting for the model. Examples \u00b6 if TimeoutRequestModel ( 'cheetah' ) then -- create vehicle cheetah end","title":"TimeoutRequestModel"},{"location":"utils/client/timeoutrequestmodel/#timeoutrequestmodel","text":"","title":"TimeoutRequestModel"},{"location":"utils/client/timeoutrequestmodel/#parameters","text":"model string / number","title":"Parameters"},{"location":"utils/client/timeoutrequestmodel/#returns","text":"model loaded boolean","title":"Returns"},{"location":"utils/client/timeoutrequestmodel/#raise","text":"warning After 20 seconds, request timed out. This breaks the loop waiting for the model.","title":"Raise"},{"location":"utils/client/timeoutrequestmodel/#examples","text":"if TimeoutRequestModel ( 'cheetah' ) then -- create vehicle cheetah end","title":"Examples"},{"location":"utils/client/triggerservercallback/","text":"TriggerServerCallback \u00b6 Parameters \u00b6 eventName string *values any Returns \u00b6 Response from server-side any Raise \u00b6 None Examples \u00b6 local some , values , returned = TriggerServerCallback ( 'awesome:script' , foo , bar ) -- this is a synchronous function!","title":"TriggerServerCallback"},{"location":"utils/client/triggerservercallback/#triggerservercallback","text":"","title":"TriggerServerCallback"},{"location":"utils/client/triggerservercallback/#parameters","text":"eventName string *values any","title":"Parameters"},{"location":"utils/client/triggerservercallback/#returns","text":"Response from server-side any","title":"Returns"},{"location":"utils/client/triggerservercallback/#raise","text":"None","title":"Raise"},{"location":"utils/client/triggerservercallback/#examples","text":"local some , values , returned = TriggerServerCallback ( 'awesome:script' , foo , bar ) -- this is a synchronous function!","title":"Examples"},{"location":"utils/common/endsWith/","text":"string:endsWith \u00b6 Parameters \u00b6 pattern string Returns \u00b6 true/false boolean Raise \u00b6 None Examples \u00b6 local my_string = 'classes is an awesome script!' if my_string : endsWith ( 'script!' ) then superfunction () end","title":"string:endsWith"},{"location":"utils/common/endsWith/#stringendswith","text":"","title":"string:endsWith"},{"location":"utils/common/endsWith/#parameters","text":"pattern string","title":"Parameters"},{"location":"utils/common/endsWith/#returns","text":"true/false boolean","title":"Returns"},{"location":"utils/common/endsWith/#raise","text":"None","title":"Raise"},{"location":"utils/common/endsWith/#examples","text":"local my_string = 'classes is an awesome script!' if my_string : endsWith ( 'script!' ) then superfunction () end","title":"Examples"},{"location":"utils/common/split/","text":"string:split \u00b6 Parameters \u00b6 pattern string Returns \u00b6 iterator function Raise \u00b6 None Examples \u00b6 local my_string = 'classes is an awesome script!' for word in my_string : split () do -- stuff print ( word ) end for word in ( \"classes is an awesome script!\" ): split () do -- stuff print ( word ) end","title":"string:split"},{"location":"utils/common/split/#stringsplit","text":"","title":"string:split"},{"location":"utils/common/split/#parameters","text":"pattern string","title":"Parameters"},{"location":"utils/common/split/#returns","text":"iterator function","title":"Returns"},{"location":"utils/common/split/#raise","text":"None","title":"Raise"},{"location":"utils/common/split/#examples","text":"local my_string = 'classes is an awesome script!' for word in my_string : split () do -- stuff print ( word ) end for word in ( \"classes is an awesome script!\" ): split () do -- stuff print ( word ) end","title":"Examples"},{"location":"utils/common/startsWith/","text":"string:startsWith \u00b6 Parameters \u00b6 pattern string Returns \u00b6 true/false boolean Raise \u00b6 None Examples \u00b6 local my_string = 'classes is an awesome script!' if my_string : startsWith ( 'classes' ) then superfunction () end","title":"string:startsWith"},{"location":"utils/common/startsWith/#stringstartswith","text":"","title":"string:startsWith"},{"location":"utils/common/startsWith/#parameters","text":"pattern string","title":"Parameters"},{"location":"utils/common/startsWith/#returns","text":"true/false boolean","title":"Returns"},{"location":"utils/common/startsWith/#raise","text":"None","title":"Raise"},{"location":"utils/common/startsWith/#examples","text":"local my_string = 'classes is an awesome script!' if my_string : startsWith ( 'classes' ) then superfunction () end","title":"Examples"},{"location":"utils/common/tablebuild/","text":"table.build \u00b6 Parameters \u00b6 iterator function Returns \u00b6 nil if passed parameter isn't a table values iterated table Raise \u00b6 None Examples \u00b6 local words = table . build (( \"classes are awesome!\" ): split ())","title":"table.build"},{"location":"utils/common/tablebuild/#tablebuild","text":"","title":"table.build"},{"location":"utils/common/tablebuild/#parameters","text":"iterator function","title":"Parameters"},{"location":"utils/common/tablebuild/#returns","text":"nil if passed parameter isn't a table values iterated table","title":"Returns"},{"location":"utils/common/tablebuild/#raise","text":"None","title":"Raise"},{"location":"utils/common/tablebuild/#examples","text":"local words = table . build (( \"classes are awesome!\" ): split ())","title":"Examples"},{"location":"utils/common/tabledump/","text":"table.dump \u00b6 Note This is not a json encoder! Parameters \u00b6 table to dump table Returns \u00b6 dumped table string Raise \u00b6 None Examples \u00b6 print ( table . dump ( table . build (( \"classes are awesome!\" ): split ()) ) ) local my_table = { key = 'awesome value' , key2 = 'classes are awesome' , key3 = { foo = 'bar' } } print ( table . dump ( my_table ) )","title":"table.dump"},{"location":"utils/common/tabledump/#tabledump","text":"Note This is not a json encoder!","title":"table.dump"},{"location":"utils/common/tabledump/#parameters","text":"table to dump table","title":"Parameters"},{"location":"utils/common/tabledump/#returns","text":"dumped table string","title":"Returns"},{"location":"utils/common/tabledump/#raise","text":"None","title":"Raise"},{"location":"utils/common/tabledump/#examples","text":"print ( table . dump ( table . build (( \"classes are awesome!\" ): split ()) ) ) local my_table = { key = 'awesome value' , key2 = 'classes are awesome' , key3 = { foo = 'bar' } } print ( table . dump ( my_table ) )","title":"Examples"},{"location":"utils/common/tablefill/","text":"table.fill \u00b6 Parameters \u00b6 input any times number Returns \u00b6 array with X times input table Raise \u00b6 error if times isn't a number Examples \u00b6 local oop_lover = table . fill ( 'OOP lover' , 5 )","title":"table.fill"},{"location":"utils/common/tablefill/#tablefill","text":"","title":"table.fill"},{"location":"utils/common/tablefill/#parameters","text":"input any times number","title":"Parameters"},{"location":"utils/common/tablefill/#returns","text":"array with X times input table","title":"Returns"},{"location":"utils/common/tablefill/#raise","text":"error if times isn't a number","title":"Raise"},{"location":"utils/common/tablefill/#examples","text":"local oop_lover = table . fill ( 'OOP lover' , 5 )","title":"Examples"},{"location":"utils/common/trim/","text":"string:trim \u00b6 Parameters \u00b6 None Returns \u00b6 trimmed string string Raise \u00b6 None Examples \u00b6 local my_string = ' classes is an awesome script! ' local my_string_but_trimmed = my_string : trim () -- my_string_but_trimmed = 'classes is an awesome script!'","title":"string:trim"},{"location":"utils/common/trim/#stringtrim","text":"","title":"string:trim"},{"location":"utils/common/trim/#parameters","text":"None","title":"Parameters"},{"location":"utils/common/trim/#returns","text":"trimmed string string","title":"Returns"},{"location":"utils/common/trim/#raise","text":"None","title":"Raise"},{"location":"utils/common/trim/#examples","text":"local my_string = ' classes is an awesome script! ' local my_string_but_trimmed = my_string : trim () -- my_string_but_trimmed = 'classes is an awesome script!'","title":"Examples"},{"location":"utils/common/type/","text":"_type \u00b6 Parameters \u00b6 object any Returns \u00b6 object type string Raise \u00b6 none Examples \u00b6 local my_object = Vehicle (...) if _type ( my_object ) == 'Vehicle' then -- internal usage, used to get the type of a Class end","title":"_type"},{"location":"utils/common/type/#_type","text":"","title":"_type"},{"location":"utils/common/type/#parameters","text":"object any","title":"Parameters"},{"location":"utils/common/type/#returns","text":"object type string","title":"Returns"},{"location":"utils/common/type/#raise","text":"none","title":"Raise"},{"location":"utils/common/type/#examples","text":"local my_object = Vehicle (...) if _type ( my_object ) == 'Vehicle' then -- internal usage, used to get the type of a Class end","title":"Examples"},{"location":"utils/common/warning/","text":"warning \u00b6 Parameters \u00b6 formatted message string *values string Returns \u00b6 none Raise \u00b6 none Examples \u00b6 warning ( 'This is for %s purposes only, %s.' , 'internal' , 'dear OOP lover' )","title":"warning"},{"location":"utils/common/warning/#warning","text":"","title":"warning"},{"location":"utils/common/warning/#parameters","text":"formatted message string *values string","title":"Parameters"},{"location":"utils/common/warning/#returns","text":"none","title":"Returns"},{"location":"utils/common/warning/#raise","text":"none","title":"Raise"},{"location":"utils/common/warning/#examples","text":"warning ( 'This is for %s purposes only, %s.' , 'internal' , 'dear OOP lover' )","title":"Examples"},{"location":"utils/server/registerservercallback/","text":"RegisterServerCallback \u00b6 Parameters \u00b6 eventName string callback function Returns \u00b6 Inside the callback source number *values any Raise \u00b6 warning if eventName isn't string warning if callback isn't function Examples \u00b6 RegisterServerCallback ( 'awesome:script' , function ( source , some , data ) -- some awesome code return some , response end )","title":"RegisterServerCallback"},{"location":"utils/server/registerservercallback/#registerservercallback","text":"","title":"RegisterServerCallback"},{"location":"utils/server/registerservercallback/#parameters","text":"eventName string callback function","title":"Parameters"},{"location":"utils/server/registerservercallback/#returns","text":"Inside the callback source number *values any","title":"Returns"},{"location":"utils/server/registerservercallback/#raise","text":"warning if eventName isn't string warning if callback isn't function","title":"Raise"},{"location":"utils/server/registerservercallback/#examples","text":"RegisterServerCallback ( 'awesome:script' , function ( source , some , data ) -- some awesome code return some , response end )","title":"Examples"},{"location":"utils/server/triggerclientcallback/","text":"TriggerClientCallback \u00b6 Parameters \u00b6 source number eventName string *values any Returns \u00b6 values from client-side any Raise \u00b6 None Examples \u00b6 local some , value , returned = TriggerClientCallback ( 'awesome:script' , some , data ) -- this is synchronous!","title":"TriggerClientCallback"},{"location":"utils/server/triggerclientcallback/#triggerclientcallback","text":"","title":"TriggerClientCallback"},{"location":"utils/server/triggerclientcallback/#parameters","text":"source number eventName string *values any","title":"Parameters"},{"location":"utils/server/triggerclientcallback/#returns","text":"values from client-side any","title":"Returns"},{"location":"utils/server/triggerclientcallback/#raise","text":"None","title":"Raise"},{"location":"utils/server/triggerclientcallback/#examples","text":"local some , value , returned = TriggerClientCallback ( 'awesome:script' , some , data ) -- this is synchronous!","title":"Examples"},{"location":"vehicle/common/init/","text":"Vehicle \u00b6 Parameters \u00b6 new vehicle boolean entity id number / model number or string x number if new vehicle is true y number if new vehicle is true z number if new vehicle is true heading number if new vehicle is true isNetwork number if new vehicle is true Returns \u00b6 object Vehicle Raise \u00b6 error if any parameter isn't the correct type error the entity doesn't exists warning the model doesn't exists Examples \u00b6 local vehicle = Vehicle ( true , 'cheetah' , 45.3 , 56.2 , 131.3 , 100.0 , true ) local vehicle = Vehicle ( false , someEntityId )","title":"Init"},{"location":"vehicle/common/init/#vehicle","text":"","title":"Vehicle"},{"location":"vehicle/common/init/#parameters","text":"new vehicle boolean entity id number / model number or string x number if new vehicle is true y number if new vehicle is true z number if new vehicle is true heading number if new vehicle is true isNetwork number if new vehicle is true","title":"Parameters"},{"location":"vehicle/common/init/#returns","text":"object Vehicle","title":"Returns"},{"location":"vehicle/common/init/#raise","text":"error if any parameter isn't the correct type error the entity doesn't exists warning the model doesn't exists","title":"Raise"},{"location":"vehicle/common/init/#examples","text":"local vehicle = Vehicle ( true , 'cheetah' , 45.3 , 56.2 , 131.3 , 100.0 , true ) local vehicle = Vehicle ( false , someEntityId )","title":"Examples"}]}