{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Classes documentation! \u00b6 Github Code \u00b6 FiveM post \u00b6 Patch Notes \u00b6 v0.1.0 BIG CHANGES \u00b6 Find a new method of creating classes, old method had bugs about being replaced it-self. v0.1.1 \u00b6 Added StateBag class Fix [client/ped.lua] missing returning the Vehicle class v0.1.2 \u00b6 Added new class Prop Added inside class methods .state It's used like class StateBag (ex: .state:set(key, value, shared)) v0.1.3 \u00b6 Added method AddBlip to Coords class Added methods GetPosition and SwapModel to class Prop Added function TimeoutRequestModel to utils Added common methods (string and table) Removed error when trying to create a Ped class with non existent entity (now is only a warning) Updated state for Player class Updated StateBag for players","title":"Home"},{"location":"#welcome-to-classes-documentation","text":"","title":"Welcome to Classes documentation!"},{"location":"#github-code","text":"","title":"Github Code"},{"location":"#fivem-post","text":"","title":"FiveM post"},{"location":"#patch-notes","text":"","title":"Patch Notes"},{"location":"#v010-big-changes","text":"Find a new method of creating classes, old method had bugs about being replaced it-self.","title":"v0.1.0 BIG CHANGES"},{"location":"#v011","text":"Added StateBag class Fix [client/ped.lua] missing returning the Vehicle class","title":"v0.1.1"},{"location":"#v012","text":"Added new class Prop Added inside class methods .state It's used like class StateBag (ex: .state:set(key, value, shared))","title":"v0.1.2"},{"location":"#v013","text":"Added method AddBlip to Coords class Added methods GetPosition and SwapModel to class Prop Added function TimeoutRequestModel to utils Added common methods (string and table) Removed error when trying to create a Ped class with non existent entity (now is only a warning) Updated state for Player class Updated StateBag for players","title":"v0.1.3"},{"location":"about/","text":"","title":"About"},{"location":"credits/","text":"Credits \u00b6 Developer \u00b6 PiterMcFlebor (\u01a4\u0196\u01ac\u0404\u01a6 M\u0187\u0191\u053c\u0404\u0181\u01a0\u01a6#9270) Contributors \u00b6 none :(","title":"Credits"},{"location":"credits/#credits","text":"","title":"Credits"},{"location":"credits/#developer","text":"PiterMcFlebor (\u01a4\u0196\u01ac\u0404\u01a6 M\u0187\u0191\u053c\u0404\u0181\u01a0\u01a6#9270)","title":"Developer"},{"location":"credits/#contributors","text":"none :(","title":"Contributors"},{"location":"coords/client/addblip/","text":"","title":"AddBlip"},{"location":"coords/client/init/","text":"","title":"Init"},{"location":"coords/client/updatew/","text":"","title":"UpdateW"},{"location":"coords/client/updatex/","text":"","title":"UpdateX"},{"location":"coords/client/updatey/","text":"","title":"UpdateY"},{"location":"coords/client/updatez/","text":"","title":"UpdateZ"},{"location":"utils/client/registerclientcallback/","text":"RegisterClientCallback \u00b6 Parameters \u00b6 eventName string callback function Returns \u00b6 Inside callback Values passed from server-side any Raise \u00b6 warning eventName wasn't string warning callback wasn't function Examples \u00b6 RegisterClientCallback ( 'awesome:script' , function ( foo , bar ) -- my awesome code return x , y end )","title":"RegisterClientCallback"},{"location":"utils/client/registerclientcallback/#registerclientcallback","text":"","title":"RegisterClientCallback"},{"location":"utils/client/registerclientcallback/#parameters","text":"eventName string callback function","title":"Parameters"},{"location":"utils/client/registerclientcallback/#returns","text":"Inside callback Values passed from server-side any","title":"Returns"},{"location":"utils/client/registerclientcallback/#raise","text":"warning eventName wasn't string warning callback wasn't function","title":"Raise"},{"location":"utils/client/registerclientcallback/#examples","text":"RegisterClientCallback ( 'awesome:script' , function ( foo , bar ) -- my awesome code return x , y end )","title":"Examples"},{"location":"utils/client/showhelpnotification/","text":"ShowHelpNotification \u00b6 Parameters \u00b6 message string thisFrame boolean optional, default false beep boolean optional, default true duration number optional, default -1 Returns \u00b6 None Raise \u00b6 None Examples \u00b6 while true do Wait ( 0 ) ESX . ShowHelpNotification ( 'Press ~INPUT_CONTEXT~ to ~y~do something~s~!' ) end","title":"ShowHelpNotification"},{"location":"utils/client/showhelpnotification/#showhelpnotification","text":"","title":"ShowHelpNotification"},{"location":"utils/client/showhelpnotification/#parameters","text":"message string thisFrame boolean optional, default false beep boolean optional, default true duration number optional, default -1","title":"Parameters"},{"location":"utils/client/showhelpnotification/#returns","text":"None","title":"Returns"},{"location":"utils/client/showhelpnotification/#raise","text":"None","title":"Raise"},{"location":"utils/client/showhelpnotification/#examples","text":"while true do Wait ( 0 ) ESX . ShowHelpNotification ( 'Press ~INPUT_CONTEXT~ to ~y~do something~s~!' ) end","title":"Examples"},{"location":"utils/client/shownotification/","text":"ShowNotification \u00b6 Parameters \u00b6 message string flash boolean saveToBrief boolean hudColorIndex number Returns \u00b6 None Raise \u00b6 None Examples \u00b6 ShowNotification ( 'My awesome ~r~red~s~ notification' )","title":"ShowNotification"},{"location":"utils/client/shownotification/#shownotification","text":"","title":"ShowNotification"},{"location":"utils/client/shownotification/#parameters","text":"message string flash boolean saveToBrief boolean hudColorIndex number","title":"Parameters"},{"location":"utils/client/shownotification/#returns","text":"None","title":"Returns"},{"location":"utils/client/shownotification/#raise","text":"None","title":"Raise"},{"location":"utils/client/shownotification/#examples","text":"ShowNotification ( 'My awesome ~r~red~s~ notification' )","title":"Examples"},{"location":"utils/client/timeoutrequestmodel/","text":"TimeoutRequestModel \u00b6 Parameters \u00b6 model string / number Returns \u00b6 model loaded boolean Raise \u00b6 warning After 500ms, request timed out. This breaks the loop waiting for the model. Examples \u00b6 if TimeoutRequestModel ( 'cheetah' ) then -- create vehicle cheetah end","title":"TimeoutRequestModel"},{"location":"utils/client/timeoutrequestmodel/#timeoutrequestmodel","text":"","title":"TimeoutRequestModel"},{"location":"utils/client/timeoutrequestmodel/#parameters","text":"model string / number","title":"Parameters"},{"location":"utils/client/timeoutrequestmodel/#returns","text":"model loaded boolean","title":"Returns"},{"location":"utils/client/timeoutrequestmodel/#raise","text":"warning After 500ms, request timed out. This breaks the loop waiting for the model.","title":"Raise"},{"location":"utils/client/timeoutrequestmodel/#examples","text":"if TimeoutRequestModel ( 'cheetah' ) then -- create vehicle cheetah end","title":"Examples"},{"location":"utils/client/triggerservercallback/","text":"TriggerServerCallback \u00b6 Parameters \u00b6 eventName string *values any Returns \u00b6 Response from server-side any Raise \u00b6 None Examples \u00b6 local some , values , returned = TriggerServerCallback ( 'awesome:script' , foo , bar ) -- this is a synchronous function!","title":"TriggerServerCallback"},{"location":"utils/client/triggerservercallback/#triggerservercallback","text":"","title":"TriggerServerCallback"},{"location":"utils/client/triggerservercallback/#parameters","text":"eventName string *values any","title":"Parameters"},{"location":"utils/client/triggerservercallback/#returns","text":"Response from server-side any","title":"Returns"},{"location":"utils/client/triggerservercallback/#raise","text":"None","title":"Raise"},{"location":"utils/client/triggerservercallback/#examples","text":"local some , values , returned = TriggerServerCallback ( 'awesome:script' , foo , bar ) -- this is a synchronous function!","title":"Examples"},{"location":"utils/common/endsWith/","text":"string:endsWith \u00b6 Parameters \u00b6 pattern string Returns \u00b6 true/false boolean Raise \u00b6 None Examples \u00b6 local my_string = 'classes is an awesome script!' if my_string : endsWith ( 'script!' ) then superfunction () end","title":"string:endsWith"},{"location":"utils/common/endsWith/#stringendswith","text":"","title":"string:endsWith"},{"location":"utils/common/endsWith/#parameters","text":"pattern string","title":"Parameters"},{"location":"utils/common/endsWith/#returns","text":"true/false boolean","title":"Returns"},{"location":"utils/common/endsWith/#raise","text":"None","title":"Raise"},{"location":"utils/common/endsWith/#examples","text":"local my_string = 'classes is an awesome script!' if my_string : endsWith ( 'script!' ) then superfunction () end","title":"Examples"},{"location":"utils/common/split/","text":"string:split \u00b6 Parameters \u00b6 pattern string Returns \u00b6 iterator function Raise \u00b6 None Examples \u00b6 local my_string = 'classes is an awesome script!' for word in my_string : split () do -- stuff print ( word ) end for word in ( \"classes is an awesome script!\" ): split () do -- stuff print ( word ) end","title":"string:split"},{"location":"utils/common/split/#stringsplit","text":"","title":"string:split"},{"location":"utils/common/split/#parameters","text":"pattern string","title":"Parameters"},{"location":"utils/common/split/#returns","text":"iterator function","title":"Returns"},{"location":"utils/common/split/#raise","text":"None","title":"Raise"},{"location":"utils/common/split/#examples","text":"local my_string = 'classes is an awesome script!' for word in my_string : split () do -- stuff print ( word ) end for word in ( \"classes is an awesome script!\" ): split () do -- stuff print ( word ) end","title":"Examples"},{"location":"utils/common/startsWith/","text":"string:startsWith \u00b6 Parameters \u00b6 pattern string Returns \u00b6 true/false boolean Raise \u00b6 None Examples \u00b6 local my_string = 'classes is an awesome script!' if my_string : startsWith ( 'classes' ) then superfunction () end","title":"string:startsWith"},{"location":"utils/common/startsWith/#stringstartswith","text":"","title":"string:startsWith"},{"location":"utils/common/startsWith/#parameters","text":"pattern string","title":"Parameters"},{"location":"utils/common/startsWith/#returns","text":"true/false boolean","title":"Returns"},{"location":"utils/common/startsWith/#raise","text":"None","title":"Raise"},{"location":"utils/common/startsWith/#examples","text":"local my_string = 'classes is an awesome script!' if my_string : startsWith ( 'classes' ) then superfunction () end","title":"Examples"},{"location":"utils/common/tablebuild/","text":"table.build \u00b6 Parameters \u00b6 iterator function Returns \u00b6 nil if passed parameter isn't a table values iterated table Raise \u00b6 None Examples \u00b6 local words = table . build (( \"classes are awesome!\" ): split ())","title":"table.build"},{"location":"utils/common/tablebuild/#tablebuild","text":"","title":"table.build"},{"location":"utils/common/tablebuild/#parameters","text":"iterator function","title":"Parameters"},{"location":"utils/common/tablebuild/#returns","text":"nil if passed parameter isn't a table values iterated table","title":"Returns"},{"location":"utils/common/tablebuild/#raise","text":"None","title":"Raise"},{"location":"utils/common/tablebuild/#examples","text":"local words = table . build (( \"classes are awesome!\" ): split ())","title":"Examples"},{"location":"utils/common/tabledump/","text":"table.dump \u00b6 !!! note This is not a json encoder! Parameters \u00b6 table to dump table Returns \u00b6 dumped table string Raise \u00b6 None Examples \u00b6 print ( table . dump ( table . build (( \"classes are awesome!\" ): split ()) ) ) local my_table = { key = 'awesome value' , key2 = 'classes are awesome' , key3 = { foo = 'bar' } } print ( table . dump ( my_table ) )","title":"table.dump"},{"location":"utils/common/tabledump/#tabledump","text":"!!! note This is not a json encoder!","title":"table.dump"},{"location":"utils/common/tabledump/#parameters","text":"table to dump table","title":"Parameters"},{"location":"utils/common/tabledump/#returns","text":"dumped table string","title":"Returns"},{"location":"utils/common/tabledump/#raise","text":"None","title":"Raise"},{"location":"utils/common/tabledump/#examples","text":"print ( table . dump ( table . build (( \"classes are awesome!\" ): split ()) ) ) local my_table = { key = 'awesome value' , key2 = 'classes are awesome' , key3 = { foo = 'bar' } } print ( table . dump ( my_table ) )","title":"Examples"},{"location":"utils/common/tablefill/","text":"table.fill \u00b6 Parameters \u00b6 input any times number Returns \u00b6 array with X times input table Raise \u00b6 error if times isn't a number Examples \u00b6 local oop_lover = table . fill ( 'OOP lover' , 5 )","title":"table.fill"},{"location":"utils/common/tablefill/#tablefill","text":"","title":"table.fill"},{"location":"utils/common/tablefill/#parameters","text":"input any times number","title":"Parameters"},{"location":"utils/common/tablefill/#returns","text":"array with X times input table","title":"Returns"},{"location":"utils/common/tablefill/#raise","text":"error if times isn't a number","title":"Raise"},{"location":"utils/common/tablefill/#examples","text":"local oop_lover = table . fill ( 'OOP lover' , 5 )","title":"Examples"},{"location":"utils/common/trim/","text":"string:trim \u00b6 Parameters \u00b6 None Returns \u00b6 trimmed string string Raise \u00b6 None Examples \u00b6 local my_string = ' classes is an awesome script! ' local my_string_but_trimmed = my_string : trim () -- my_string_but_trimmed = 'classes is an awesome script!'","title":"string:trim"},{"location":"utils/common/trim/#stringtrim","text":"","title":"string:trim"},{"location":"utils/common/trim/#parameters","text":"None","title":"Parameters"},{"location":"utils/common/trim/#returns","text":"trimmed string string","title":"Returns"},{"location":"utils/common/trim/#raise","text":"None","title":"Raise"},{"location":"utils/common/trim/#examples","text":"local my_string = ' classes is an awesome script! ' local my_string_but_trimmed = my_string : trim () -- my_string_but_trimmed = 'classes is an awesome script!'","title":"Examples"},{"location":"utils/common/type/","text":"_type \u00b6 Parameters \u00b6 object any Returns \u00b6 object type string Raise \u00b6 none Examples \u00b6 local my_object = Vehicle (...) if _type ( my_object ) == 'Vehicle' then -- internal usage, used to get the type of a Class end","title":"_type"},{"location":"utils/common/type/#_type","text":"","title":"_type"},{"location":"utils/common/type/#parameters","text":"object any","title":"Parameters"},{"location":"utils/common/type/#returns","text":"object type string","title":"Returns"},{"location":"utils/common/type/#raise","text":"none","title":"Raise"},{"location":"utils/common/type/#examples","text":"local my_object = Vehicle (...) if _type ( my_object ) == 'Vehicle' then -- internal usage, used to get the type of a Class end","title":"Examples"},{"location":"utils/common/warning/","text":"warning \u00b6 Parameters \u00b6 formatted message string *values string Returns \u00b6 none Raise \u00b6 none Examples \u00b6 warning ( 'This is for %s purposes only, %s.' , 'internal' , 'dear OOP lover' )","title":"warning"},{"location":"utils/common/warning/#warning","text":"","title":"warning"},{"location":"utils/common/warning/#parameters","text":"formatted message string *values string","title":"Parameters"},{"location":"utils/common/warning/#returns","text":"none","title":"Returns"},{"location":"utils/common/warning/#raise","text":"none","title":"Raise"},{"location":"utils/common/warning/#examples","text":"warning ( 'This is for %s purposes only, %s.' , 'internal' , 'dear OOP lover' )","title":"Examples"},{"location":"utils/server/registerservercallback/","text":"RegisterServerCallback \u00b6 Parameters \u00b6 eventName string callback function Returns \u00b6 Inside the callback source number *values any Raise \u00b6 warning if eventName isn't string warning if callback isn't function Examples \u00b6 RegisterServerCallback ( 'awesome:script' , function ( source , some , data ) -- some awesome code return some , response end )","title":"RegisterServerCallback"},{"location":"utils/server/registerservercallback/#registerservercallback","text":"","title":"RegisterServerCallback"},{"location":"utils/server/registerservercallback/#parameters","text":"eventName string callback function","title":"Parameters"},{"location":"utils/server/registerservercallback/#returns","text":"Inside the callback source number *values any","title":"Returns"},{"location":"utils/server/registerservercallback/#raise","text":"warning if eventName isn't string warning if callback isn't function","title":"Raise"},{"location":"utils/server/registerservercallback/#examples","text":"RegisterServerCallback ( 'awesome:script' , function ( source , some , data ) -- some awesome code return some , response end )","title":"Examples"},{"location":"utils/server/triggerclientcallback/","text":"TriggerClientCallback \u00b6 Parameters \u00b6 source number eventName string *values any Returns \u00b6 values from client-side any Raise \u00b6 None Examples \u00b6 local some , value , returned = TriggerClientCallback ( 'awesome:script' , some , data ) -- this is synchronous!","title":"TriggerClientCallback"},{"location":"utils/server/triggerclientcallback/#triggerclientcallback","text":"","title":"TriggerClientCallback"},{"location":"utils/server/triggerclientcallback/#parameters","text":"source number eventName string *values any","title":"Parameters"},{"location":"utils/server/triggerclientcallback/#returns","text":"values from client-side any","title":"Returns"},{"location":"utils/server/triggerclientcallback/#raise","text":"None","title":"Raise"},{"location":"utils/server/triggerclientcallback/#examples","text":"local some , value , returned = TriggerClientCallback ( 'awesome:script' , some , data ) -- this is synchronous!","title":"Examples"}]}